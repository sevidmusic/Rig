  ~~~
  ```
  rig --make-app-package --path
  ```
  ~~~~~
  ~~~
  Description:
  ~~~~~
  ~~~
  Make an App Package into an App.
  ~~~~~
  ~~~
  The newly made App will be located at the path that corresponds 
  to the value assigned to the --path-to-apps-directory flag.
  ~~~~~
  ~~~
  For example, if --path-to-apps-directory is assigned the path:
  ~~~~~
  ~~~
  ```
  /path/to/roady/Apps
  ```
  ~~~~~
  ~~~
  Then `rig --make-app-package --path /path/to/AppPackage/Foo` 
  would make the Foo App at:
  ~~~~~
  ~~~
  ```
  /path/to/roady/Apps/Foo
  ```
  ~~~~~
  ~~~
  WARNING: Be careful with this command, any directory 
  whose name matches the specified --name that exists 
  at the --path-to-apps-directory will be replaced by 
  the newly made App.
  ~~~~~
  ~~~
  The --path-to-apps-directory flag's assigned value will be determined by rig at
  runtime unless it is set explicitly.
  ~~~~~
  ~~~
  WARNING: It is best to let rig manage the
  --path-to-apps-directory flag's value to 
  insure an appropriate path is used.
  ~~~~~
  ~~~
  For more information about the --path-to-apps-directory 
  flag use: 
  ~~~~~
  ~~~
  ```
  rig --help path-to-apps-directory
  ```
  ~~~~~
  ~~~
  Note: With the exception of files ending in extension .sh, 
  any files or directories that exist in the App Package will 
  be copied to a corresponding path in the new App's directory.
  ~~~~~
  ~~~
  For example, if an App package at /path/to/Foo contains 
  a file at: 
  ~~~~~
  ~~~
  ```
  /path/to/Foo/css/styles.css
  ```
  ~~~~~
  ~~~
  And the --path-to-apps-directory is /path/to/roady/Apps, then:
  ~~~~~
  ~~~
  ```
  rig --make-app-package --path /path/to/Foo
  ```
  ~~~~~
  ~~~
  Would create a new App named Foo that defined a file named 
  stylesheet.css in a directory named css which would be 
  located at: 
  ~~~~~
  ~~~
  ```
  /path/to/roady/Apps/Foo/css/stylesheet.css
  ```
  ~~~~~
  ### Flags:
  ~~~```--path```~~~~~ 
         ~~~
         The path to the App Package to make.
         ~~~~~
         ~~~
         WARNING: If the specified path is not valid, or the 
         path specified does not point to a directory that 
         contains a valid make.sh, then the App will not be 
         made. 
         ~~~~~
         ~~~
         A valid make.sh is just a bash script that contains at 
         least one call to `rig --new-app` that specifies a 
         `--name` that matches the App package's directory name.
         ~~~~~
         ~~~
         For example, a valid make.sh for an App package named 
         Foo may look like: 
         ~~~~~
         ~~~
         ```
         #!/bin/bash

         set -o posix

         rig --new-app --name Foo
         ```
         ~~~~~
  ~~~
  ### Examples:
  ~~~~~
  ~~~
  ```
  rig --make-app-package --path /path/to/AppPackage
  ```
  ~~~~~
