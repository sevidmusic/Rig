  ~~~
  # Responses
  ~~~~~
  ~~~
  Responses can be configured to serve the output of 
  OutputComponents and DynamicOutputComponents in response 
  to appropriate requests to the domains an App is built for.
  ~~~~~
  ~~~
  New Responses can be configured for an existing App via:
  ~~~~~
  ~~~
  ```
  rig --new-response
  ```
  ~~~~~
  ~~~
  For example: 
  ~~~~~
  ~~~
  ```
  rig --new-response \
      --for-app Foo \
      --name Bar 
  ```
  ~~~~~
  ~~~
  Note: More information about `rig --new-response` can be obtained 
  via:
  ~~~
  ```
  rig --help new-response
  ```
  ~~~~~
  ~~~~~
  ~~~
  To configure a Response to respond to a Request, the 
  relevant Request must be assigned to the Response via 
  `rig --assign-to-response`.
  ~~~~~
  ~~~
  For example, the following calls to rig will create a new App
  named `Bar`, configure a Response named `Baz`, configure a
  Request named `Bazzer`, and assign the `Bazzer` Request to
  the `Bar` Response:
  ~~~~~
  ~~~
  ```
  rig --new-app \
      --name Bar

  rig --new-response \
      --for-app Bar \
      --name Baz

  rig --new-request \
      --for-app Bar \
      --name Bazzer 

  rig --assign-to-response \
      --for-app Bar \
      --response Baz \
      --requests Bazzer
  ```
  ~~~~~
  ~~~
  Note: More information about the `rig --assign-to-response` flag
  can be obtained via:
  ~~~
  ```
  rig --help assign-to-response
  ```
  ~~~~~
  ~~~~~
  ~~~
  To configure a Response to serve the output of a OutputComponent 
  or DynamicOutputComponent in response to a Request, the 
  OutputComponent or DynamicOutputComponent, and the Request 
  must be assigned to the Response via `rig --assign-to-response`. 
  ~~~~~
  ~~~
  For example, the following calls to rig will create a new App
  named `Baz`, configure a Response named `Foo`, configure a
  OutputComponent named `Bar`, configure a Request named `Bin`,
  and assign the `Bar` OutputComponent and the `Bin` Request to
  the `Foo` Response:
  ~~~~~
  ~~~
  ```
  rig --new-app \
      --name Baz

  rig --new-response \
      --for-app Baz \
      --name Foo

  rig --new-output-component \
      --for-app Baz \
      --name Bar \
      --output 'Foo bar bazzer'

  rig --new-request \
      --for-app Baz \
      --name Bin 

  rig --assign-to-response \
      --for-app Baz \
      --response Foo \
      --output-components Bar \
      --requests Bin
  ```
  ~~~~~
  ~~~
  Note: More information about OutputComponent can be obtained via:
  ~~~
  ```
  rig --help OutputComponents
  ```
  ~~~~~
  ~~~
  Note: More information about DynamicOutputComponents can be 
  obtained via:
  ~~~
  ```
  rig --help DynamicOutputComponents
  ```
  ~~~~~
  ~~~
  Hint: The `--configure-app-output` flag can also be used to
  configure output to be served in response to a request.
  ~~~~~
  ~~~
  For example, if the Foo App does not exist, then the following:
  ~~~~~
  ~~~
  ```
  rig --configure-app-output \
      --for-app FooBarBaz \
      --name Bar \
      --output Baz
  ```
  ~~~~~
  ~~~
  Is equivalent to:
  ~~~~~
  ~~~
  ```
  rig --new-app \
      --name FooBarBaz

  rig --new-dynamic-output-component \
      --for-app FooBarBaz \
      --name Bar \
      --initial-output Baz \
      --container FooDynamicOutput

  rig --new-request \
      --for-app FooBarBaz \
      --name Bar \
      --relative-url 'index.php?request=Bar' \
      --container FooRequests

  rig --new-response \
      --for-app FooBarBaz \
      --name Bar

  rig --assign-to-response \
      --for-app FooBarBaz \
      --response Bar \
      --dynamic-output-components Bar \
      --requests Bar
  ```
  ~~~~~
  ~~~
  Note: More information about the `--configure-app-output` flag
  can be obtained via:
  ~~~
  ```
  rig --help configure-app-output
  ```
  ~~~~~
  ~~~~~
  ~~~
  Note: There is another type of Response called a GlobalResponse
  that can configured to serve output in response to all requests 
  to a domain.
  ~~~
  Note: More information about GlobalResponses can be obtained
  via:
  ~~~
  ```
  rig --help GlobalResponses
  ```
  ~~~~~
  ~~~~~
  ~~~~~
